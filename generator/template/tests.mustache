module {{moduleName}}Tests exposing (suite)

{-| Unit tests for testing the Bubblegum.Entity.{{moduleName}}

  **generated** in generator/src/generator.ts

-}
import Test exposing (..)
import Expect as Expect
import FunctionTester exposing (ok,ok1,ok2,ok3)
import {{moduleName}}TestData exposing (..)
import {{packageNameDot}}.{{moduleName}} as {{moduleName}}


suite : Test
suite =
    describe "The {{moduleName}} module"
        [
            {{#functions}}
            {{#states}}
            describe "{{name}}"
            [
               {{#has1Param}}
               fuzz fuzzyV1{{#firstUpper}}{{name}}{{/firstUpper}} "{{name}} should return {{stateName}}" <|
                \v1 ->
                    {{moduleName}}.{{name}} (validP1{{#firstUpper}}{{name}}{{/firstUpper}}For{{#camelCaseUpper}}{{stateName}}{{/camelCaseUpper}} v1)
                    |> summarize{{#firstUpper}}{{name}}{{/firstUpper}}For{{#camelCaseUpper}}{{stateName}}{{/camelCaseUpper}}
                    |> Expect.equal {{ok}},
               {{/has1Param}}
               {{#has2Params}}
               fuzz2 fuzzyV1{{#firstUpper}}{{name}}{{/firstUpper}} fuzzyV2{{#firstUpper}}{{name}}{{/firstUpper}} "{{name}} should return {{stateName}}" <|
                \v1 v2 ->
                    {{moduleName}}.{{name}} (validP1{{#firstUpper}}{{name}}{{/firstUpper}}For{{#camelCaseUpper}}{{stateName}}{{/camelCaseUpper}} v1) (validP2{{#firstUpper}}{{name}}{{/firstUpper}}For{{#camelCaseUpper}}{{stateName}}{{/camelCaseUpper}} v2)
                    |> summarize{{#firstUpper}}{{name}}{{/firstUpper}}For{{#camelCaseUpper}}{{stateName}}{{/camelCaseUpper}}
                    |> Expect.equal {{ok}},
               {{/has2Params}}
               {{#has3Params}}
               fuzz3 fuzzyV1{{#firstUpper}}{{name}}{{/firstUpper}} fuzzyV2{{#firstUpper}}{{name}}{{/firstUpper}} fuzzyV3{{#firstUpper}}{{name}}{{/firstUpper}} "{{name}} should return {{stateName}}" <|
                \v1 v2 v3->
                    {{moduleName}.{{name}} (validP1{{#firstUpper}}{{name}}{{/firstUpper}}For{{#camelCaseUpper}}{{stateName}}{{/camelCaseUpper}} v1) (validP2{{#firstUpper}}{{name}}{{/firstUpper}}For{{#camelCaseUpper}}{{stateName}}{{/camelCaseUpper}} v2) (validP3{{#firstUpper}}{{name}}{{/firstUpper}}For{{#camelCaseUpper}}{{stateName}}{{/camelCaseUpper}} v3)
                    |> summarize{{#firstUpper}}{{name}}{{/firstUpper}}For{{#camelCaseUpper}}{{stateName}}{{/camelCaseUpper}}
                    |> Expect.equal {{ok}},
                {{/has3Params}}
            ],
            {{/states}}
            {{/functions}}
            
        ]